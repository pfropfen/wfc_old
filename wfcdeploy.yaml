apiVersion: v1
kind: Service
metadata:
  name: timedb
  labels:
    app: timedb
spec:
  type: NodePort
  ports:
  - port: 3306
    name: dtimedbport
    protocol: TCP
    targetPort: 3306
    nodePort: 31006
  selector:
    app: timedb
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: timedb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: timedb-storage
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/data"  # volume location
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: timedb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: timedb
  template:
    metadata:
      labels:
        app: timedb
    spec:
      volumes:
        - name: timedb-storage
          persistentVolumeClaim:
            claimName: timedb-pvc
      containers:
        - name: timedb-container
          image: pfropfen/imgtimedb
          imagePullPolicy: Always
          env:
            - name: MYSQL_ROOT_USER
              value: "root"
            - name: MYSQL_ROOT_PASSWORD
              value: "root"
            - name: MYSQL_USER
              value: "wfc"
            - name: MYSQL_PASSWORD
              value: "wfc"
            - name: MYSQL_DATABASE
              value: "times"
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: timedb-storage
---
apiVersion: v1
kind: Service
metadata:
  #annotations:
    #service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: wfcdb
  labels:
    app: wfcdb
spec:
  #type: NodePort
  ports:
  - port: 3306
    #name: wfcmanager
    #targetPort: 5000
    #nodePort: 32756
  selector:
    app: wfcdb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wfcdb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wfcdb
  template:
    metadata:
      labels:
        app: wfcdb
    spec:
      containers:
      - name: wfcdb-container
        image: pfropfen/imgdb
        imagePullPolicy: Always
        env:
          - name: MYSQL_ROOT_USER
            value: "root"
          - name: MYSQL_ROOT_PASSWORD
            value: "root"
          - name: MYSQL_USER
            value: "wfc"
          - name: MYSQL_PASSWORD
            value: "wfc"
          - name: MYSQL_DATABASE
            value: "maps"
        ports:
        - containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  #annotations:
    #service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: wfcrabbit
  labels:
    app: wfcrabbit
spec:
  #type: NodePort
  ports:
  - port: 5672
    #name: wfcmanager
    #targetPort: 5000
    #nodePort: 32756
  selector:
    app: wfcrabbit
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wfcrabbit-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wfcrabbit
  template:
    metadata:
      labels:
        app: wfcrabbit
    spec:
      containers:
      - name: wfcrabbit-container
        image: rabbitmq:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5672
---
apiVersion: v1
kind: Service
metadata:
  #annotations:
    #service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: wfcmanager
  labels:
    app: wfcmanager
spec:
  type: NodePort
  ports:
  - port: 5000
    name: wfcmanagerport
    targetPort: 5000
    nodePort: 31000
  selector:
    app: wfcmanager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wfcmanager-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wfcmanager
  template:
    metadata:
      labels:
        app: wfcmanager
    spec:
      containers:
      - name: wfcmanager-container
        image: pfropfen/imgmanager
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
#      imagePullSecrets:
#        - name: dockerauth
---
apiVersion: v1
kind: Service
metadata:
  #annotations:
    #service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: wfcdistributor
  labels:
    app: wfcdistributor
spec:
  type: NodePort
  ports:
  - port: 5001
    name: distributorport
    protocol: TCP
    targetPort: 5001
    nodePort: 31001
  #externalIPs:
    #- 192.168.1.93
  selector:
    app: wfcdistributor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wfcdistributor-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wfcdistributor
  template:
    metadata:
      labels:
        app: wfcdistributor
    spec:
      containers:
      - name: wfcdistributor-container
        image: pfropfen/imgdistributor
        imagePullPolicy: Always
        ports:
        - containerPort: 5001
#      imagePullSecrets:
#        - name: dockerauth
---
apiVersion: v1
kind: Service
metadata:
  #annotations:
    #service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: wfchub
  labels:
    app: wfchub
spec:
  type: NodePort
  ports:
  - port: 5002
    name: wfchubport
    targetPort: 5002
    nodePort: 31002
  selector:
    app: wfchub
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wfchub-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wfchub
  template:
    metadata:
      labels:
        app: wfchub
    spec:
      containers:
      - name: wfchub-container
        image: pfropfen/imghub
        imagePullPolicy: Always
        ports:
        - containerPort: 5002
#      imagePullSecrets:
#        - name: dockerauth
---
apiVersion: v1
kind: Service
metadata:
  #annotations:
    #service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: wfcworker
  labels:
    app: wfcworker
spec:
  #type: NodePort
  ports:
  - port: 5003
    #name: wfcmanager
    #targetPort: 5000
    #nodePort: 32756
  selector:
    app: wfcworker
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wfcworker-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wfcworker
  template:
    metadata:
      labels:
        app: wfcworker
    spec:
      containers:
      - name: wfcworker-container
        image: pfropfen/imgworker
        imagePullPolicy: Always
        ports:
        - containerPort: 5003
#      imagePullSecrets:
#        - name: dockerauth
---
apiVersion: v1
kind: Service
metadata:
  #annotations:
    #service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: wfctimekeeper
  labels:
    app: wfctimekeeper
spec:
  type: NodePort
  ports:
  - port: 6002
    name: wfctimekeeperport
    targetPort: 6002
    nodePort: 32002
  selector:
    app: wfctimekeeper
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wfctimekeeper-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wfctimekeeper
  template:
    metadata:
      labels:
        app: wfctimekeeper
    spec:
      containers:
      - name: wfctimekeeper-container
        image: pfropfen/imgtimekeeper
        imagePullPolicy: Always
        ports:
        - containerPort: 6002

